package com.example.study.api.payment.common.exception;

public enum ErrorMessages {
    // 1000 이하 : 시스템 에러
    //  900 번대 : 파라미터 체크 오류 관련
    //
    // 3000 번대 : 금액 관련
    //
    // 5000 번대 : 구매 관련

    /* */CODE_0(0, "정상"),
    /* */CODE_1(1, "시스템 오류입니다."),
    /* */CODE_2(2, "잘못된 요청입니다."),
    /* */CODE_4(4, "내부 함수 호출 오류 = [%s]"),
    /* */CODE_5(5, "DB 접속 ERROR"),

    // 결제 승인 실패 메시지
    /* */CODE_99(99, "결제가 실패됐습니다.\n실패사유: %s"),
    /* */CODE_991(991, "결제가 실패됐습니다."),

    /* */CODE_901(901, "파라미터가 정의되지 않았습니다."),
    /* */CODE_902(902, "파라미터가 올바르지 않습니다."),
    /* */CODE_903(903, "%s 파라미터 값은 반드시 있어야 합니다."),
    /* */CODE_904(904, "파라미터가 올바르지 않습니다. (%s)"),
    /* */CODE_905(905, "%s 파라미터 중 하나의 값은 반드시 있어야 합니다"),
    /* */CODE_906(906, "%s 파라미터는 %s 파라미터보다 클 수 없습니다. "),
    /* */CODE_907(907, "%s 파라미터는 %s 파라미터보다 작을 수 없습니다."),
    /* */CODE_908(908, "%s [%s] 파라미터는 숫자형 이어야 합니다."),
    /* */CODE_910(910, "결제 요청 정보를 찾을 수 없습니다. (%s)"),
    /* */CODE_911(911, "결제 요청 정보가 중복되었습니다. (%s)"),
    /* */CODE_990(990, "%s 파라미터는 %s 자를 넘을 수 없습니다."),
    /* */CODE_999(999, "쿼리가 수행되지 않았습니다. (%s)"),

    /* */CODE_1000(1000, "[아임포트] 결제 또는 취소가 실패되었습니다. (%s)"),

    //PG 무통장입금 입금 확인 관련(3300~)
    /* */CODE_3301(3301, "[입금확인] 필수 파라미터가 누락되었습니다.(%s)"),
    /* */CODE_3311(3302, "[입금확인] 이미 처리된 건입니다."),

    //PG 무통장입금 입금 전 취소 관련(3331~)
    /* */CODE_3331(3331, "[미입금취소] 결제정보를 찾을 수 없습니다.(%s)"),
    /* */CODE_3332(3332, "[미입금취소] 처리가 불가능한 상태입니다.(%s)"),
    /* */CODE_3333(3333, "[미입금취소] %s 정보가 일치하지 않습니다.(%s / %s)"),
    /* */CODE_3334(3334, "[미입금취소] 무통장입금 결제건이 아닙니다.(%s)"),
    /* */CODE_3335(3335, "[미입금취소] PG %s은(는) 입금 전 취소를 할 수 없습니다."),
    /* */CODE_3336(3336, "[미입금취소] 입금만료일이 지났습니다."),

    //PG 무통장입금 입금 정보 관련(3351~)
    /* */CODE_3351(3351, "[입금정보] 결제정보를 찾을 수 없습니다.(%s)"),
    /* */CODE_3353(3353, "[입금정보] %s 정보가 일치하지 않습니다.(%s / %s)"),
    /* */CODE_3354(3354, "[입금정보] 무통장입금 결제건이 아닙니다.(%s)"),
    /* */CODE_3355(3355, "[입금정보] PG %s은(는) 무통장입금를 지원하지 않습니다."),
    /* */CODE_3356(3356, "[입금정보] 입금만료일이 지났습니다."),

    //PG 무통장입금 입금 안내 관련(3361~)
    /* */CODE_3361(3361, "[입금안내] 결제정보를 찾을 수 없습니다.(%s)"),
    /* */CODE_3362(3362, "[입금안내] 처리가 불가능한 상태입니다.(%s)"),
    /* */CODE_3363(3363, "[입금안내] 무통장입금 결제건이 아닙니다.(%s)"),
    /* */CODE_3364(3364, "[입금안내] PG %s은(는) 입금 안내를 할 수 없습니다."),
    /* */CODE_3365(3365, "[입금안내] 데이터 처리에 실패하였습니다."),
    /* */CODE_3366(3366, "[입금안내] 이미 처리된 주문번호입니다.(%s)"),

    //PG 무통장입금 환불 완료 관련(3380~)
    /* */CODE_3380(3380, "[환불완료] 환불 완료는 성공만 처리가 가능합니다.(%s)"),
    /* */CODE_3381(3381, "[환불완료] 필수 파라미터가 누락되었습니다.(%s)"),
    /* */CODE_3382(3382, "[환불완료] PG %s은(는) 환불 완료를 할 수 없습니다."),
    /* */CODE_3383(3383, "[환불완료] 결제정보를 찾을 수 없습니다.(%s)"),
    /* */CODE_3384(3384, "[환불완료] 처리가 불가능한 상태입니다.(%s)"),
    /* */CODE_3385(3385, "[환불완료] %s 정보가 일치하지 않습니다.(%s / %s)"),
    /* */CODE_3386(3386, "[환불완료] 이미 처리된 건입니다.(%s)"),
    /* */CODE_3388(3388, "[환불완료] 올바른 결제수단이 아닙니다.(%s)"),
    /* */CODE_3390(3390, "[환불완료] 정보 업데이트에 실패했습니다.(%s)"),

    /* */CODE_3502(3502, "취소 금액을 입력하여 주세요."),
    /* */CODE_3503(3503, "취소 금액은 %s 를 넘을 수 없습니다."),
    /* */CODE_3505(3505, "취소에 실패했습니다."),
    /* */CODE_3506(3506, "PG [%s] 은(는) 부분취소를 할 수 없습니다."),
    /* */CODE_3507(3507, "존재하지 않는 은행사입니다."),
    /* */CODE_3511(3511, "유효하지 않은 결제 수단 입니다."),
    /* */CODE_3512(3512, "부분 취소를 할 수 없는 결제 수단 입니다."),
    /* */CODE_3513(3513, "테스트 환경에서 실 결제 데이터를 취소할 수 없습니다."),
    /* */CODE_3514(3514, "정의되지 않은 PG사 코드 입니다."),
    /* */CODE_3515(3515, "결제정보 필수 파라미터가 잘못 되었습니다."),
    /* */CODE_3516(3516, "회원의 환불계좌가 없어 결제를 취소할 수 없습니다."),
    /* */CODE_3517(3517, "미입금된 은행 송금은 부분취소할 수 없습니다."),
    /* */CODE_3518(3518, "결제 정보를 처리하지 못하였습니다."),

    /* */CODE_3519(3519, "휴대폰결제는 당월 결제분만 취소가 가능합니다."),
    /* */CODE_3601(3601, "유효하지 않은 주문 번호입니다."),
    /* */CODE_3602(3602, "이전 취소된 것은 복구가 불가능합니다."),
    /* */CODE_3603(3603, "여러 주문에 대한 동시 복구는 불가능합니다."),
    /* */CODE_3604(3604, "결제 금액 정보가 올바르지 않습니다."),
    /* */CODE_3605(3605, "이미 취소된 거래건입니다."),
    /* */CODE_3606(3606, "중복 주문입니다."),

    /* */CODE_3855(3855, "0원 이하로 구매하실 수 없습니다."),

    // 복구 관련 - PG 사는 성공 우리는 실패 또는 대기
    /* */CODE_5101(5101, "구매 정보가 없습니다."),

    /* */CODE_9995(9995, "API 통신에 실패했습니다. [%s]"),
    /* */CODE_9996(9996, "암호화 작업이 실패했습니다. [%s]"),
    /* */CODE_9997(9997, "복호화 작업이 실패했습니다. [%s]"),
    /* */CODE_9998(9998, "암복호화 작업이 실패했습니다."),
    /* */CODE_9999(9999, "에러가 발생하였습니다. error_code = [%s] error_message = [%s]");

    private int code;
    private String errorMessage;

    private ErrorMessages(int code, String errorMessage) {
        this.errorMessage = errorMessage;
        this.code = code;
    }

    public int getCode() {
        return this.code;
    }

    public String getErrorMessage() {
        return this.errorMessage;
    }
}
